// <auto-generated />
using System;
using ApiTcc.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ApiTcc.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ApiTcc.Models.Cliente", b =>
                {
                    b.Property<int>("clienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Perfil")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Cliente");

                    b.Property<byte[]>("clienteImagem")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("cpfCadCliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("emailCadCliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("enderecoCadCliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nomeCadCliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("senhaCadCliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telCadCliente")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("clienteId");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            clienteId = 1,
                            cpfCadCliente = "12345678998",
                            emailCadCliente = "email@email.com",
                            enderecoCadCliente = "Rua do Cliente A",
                            nomeCadCliente = "Cliente A",
                            senhaCadCliente = "123456",
                            telCadCliente = "11900000000"
                        },
                        new
                        {
                            clienteId = 2,
                            cpfCadCliente = "12345678998",
                            emailCadCliente = "email@email.com",
                            enderecoCadCliente = "Rua do Cliente B",
                            nomeCadCliente = "Cliente B",
                            senhaCadCliente = "123456",
                            telCadCliente = "11900000000"
                        },
                        new
                        {
                            clienteId = 3,
                            cpfCadCliente = "12345678998",
                            emailCadCliente = "email@email.com",
                            enderecoCadCliente = "Rua do Cliente C",
                            nomeCadCliente = "Cliente C",
                            senhaCadCliente = "123456",
                            telCadCliente = "11900000000"
                        },
                        new
                        {
                            clienteId = 4,
                            cpfCadCliente = "12345678998",
                            emailCadCliente = "email@email.com",
                            enderecoCadCliente = "Rua do Cliente D",
                            nomeCadCliente = "Cliente D",
                            senhaCadCliente = "123456",
                            telCadCliente = "11900000000"
                        },
                        new
                        {
                            clienteId = 5,
                            cpfCadCliente = "12345678998",
                            emailCadCliente = "email@email.com",
                            enderecoCadCliente = "Rua do Cliente E",
                            nomeCadCliente = "Cliente E",
                            senhaCadCliente = "123456",
                            telCadCliente = "11900000000"
                        });
                });

            modelBuilder.Entity("ApiTcc.Models.Comissao", b =>
                {
                    b.Property<int>("comissaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("porcentagemComissao")
                        .HasColumnType("float");

                    b.Property<double>("valor")
                        .HasColumnType("float");

                    b.HasKey("comissaoId");

                    b.ToTable("Comissoes");

                    b.HasData(
                        new
                        {
                            comissaoId = 1,
                            porcentagemComissao = 10.0,
                            valor = 100.0
                        },
                        new
                        {
                            comissaoId = 2,
                            porcentagemComissao = 10.0,
                            valor = 130.0
                        },
                        new
                        {
                            comissaoId = 3,
                            porcentagemComissao = 10.0,
                            valor = 250.0
                        });
                });

            modelBuilder.Entity("ApiTcc.Models.Enuns.Associado", b =>
                {
                    b.Property<int>("associadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Perfil")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Associado");

                    b.Property<byte[]>("associadoImagem")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("cnpjCadAssociado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("emailCadAssociado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("enderecoCadAssociado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nomeCadAssociado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("senhaCadAssociado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telCadAssociado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("tipoPlano")
                        .HasColumnType("int");

                    b.HasKey("associadoId");

                    b.ToTable("Associados");

                    b.HasData(
                        new
                        {
                            associadoId = 1,
                            cnpjCadAssociado = "1231134",
                            emailCadAssociado = "associadoa@associadoa.com",
                            enderecoCadAssociado = "Rua do Associado A",
                            nomeCadAssociado = "Associado A",
                            senhaCadAssociado = "123456",
                            tipoPlano = 0
                        },
                        new
                        {
                            associadoId = 2,
                            cnpjCadAssociado = "1231134",
                            emailCadAssociado = "associadob@associadob.com",
                            enderecoCadAssociado = "Rua do Associado B",
                            nomeCadAssociado = "Associado B",
                            senhaCadAssociado = "123456",
                            tipoPlano = 0
                        },
                        new
                        {
                            associadoId = 3,
                            cnpjCadAssociado = "1231134",
                            emailCadAssociado = "associadoc@associadoc.com",
                            enderecoCadAssociado = "Rua do Associado C",
                            nomeCadAssociado = "Associado C",
                            senhaCadAssociado = "123456",
                            tipoPlano = 0
                        },
                        new
                        {
                            associadoId = 4,
                            cnpjCadAssociado = "1231134",
                            emailCadAssociado = "associadod@associadod.com",
                            enderecoCadAssociado = "Rua do Associado D",
                            nomeCadAssociado = "Associado D",
                            senhaCadAssociado = "123456",
                            tipoPlano = 0
                        },
                        new
                        {
                            associadoId = 5,
                            cnpjCadAssociado = "1231134",
                            emailCadAssociado = "associadoe@associadoe.com",
                            enderecoCadAssociado = "Rua do Associado E",
                            nomeCadAssociado = "Associado E",
                            senhaCadAssociado = "123456",
                            tipoPlano = 0
                        });
                });

            modelBuilder.Entity("ApiTcc.Models.Pedido", b =>
                {
                    b.Property<int>("pedidoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("clienteId")
                        .HasColumnType("int");

                    b.Property<string>("dataPedido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("qtdPedido")
                        .HasColumnType("int");

                    b.Property<string>("statusPedido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("valorTotalPedido")
                        .HasColumnType("int");

                    b.Property<int>("valorUniPedido")
                        .HasColumnType("int");

                    b.HasKey("pedidoId");

                    b.HasIndex("clienteId");

                    b.ToTable("Pedidos");

                    b.HasData(
                        new
                        {
                            pedidoId = 1,
                            dataPedido = "12/05/2022",
                            qtdPedido = 1,
                            statusPedido = "Aguardando Confirmação",
                            valorTotalPedido = 95,
                            valorUniPedido = 95
                        },
                        new
                        {
                            pedidoId = 2,
                            dataPedido = "13/06/2022",
                            qtdPedido = 2,
                            statusPedido = "Aguardando Confirmação",
                            valorTotalPedido = 45,
                            valorUniPedido = 22
                        },
                        new
                        {
                            pedidoId = 3,
                            dataPedido = "14/07/2022",
                            qtdPedido = 3,
                            statusPedido = "Reservado",
                            valorTotalPedido = 85,
                            valorUniPedido = 25
                        });
                });

            modelBuilder.Entity("ApiTcc.Models.Pet", b =>
                {
                    b.Property<int>("petId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("caracteristicaPet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("clienteId")
                        .HasColumnType("int");

                    b.Property<string>("corPet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("especiePet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("microshipPet")
                        .HasColumnType("int");

                    b.Property<string>("nomePet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("petImagem")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("portePet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("racaPet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("rgaPet")
                        .HasColumnType("int");

                    b.HasKey("petId");

                    b.HasIndex("clienteId");

                    b.ToTable("Pets");

                    b.HasData(
                        new
                        {
                            petId = 1,
                            caracteristicaPet = "Característica A",
                            clienteId = 1,
                            corPet = "Cor A",
                            especiePet = "Gato A",
                            microshipPet = 1233211243,
                            nomePet = "Gato A",
                            portePet = "Pequeno A",
                            racaPet = "Raça A",
                            rgaPet = 123321125
                        },
                        new
                        {
                            petId = 2,
                            caracteristicaPet = "Característica B",
                            clienteId = 2,
                            corPet = "Cor B",
                            especiePet = "Gato B",
                            microshipPet = 1233211233,
                            nomePet = "Gato B",
                            portePet = "Pequeno B",
                            racaPet = "Raça B",
                            rgaPet = 123321123
                        },
                        new
                        {
                            petId = 3,
                            caracteristicaPet = "Característica C",
                            clienteId = 3,
                            corPet = "Cor C",
                            especiePet = "Cachorro",
                            microshipPet = 1233211233,
                            nomePet = "Cachorro C",
                            portePet = "Pequeno C",
                            racaPet = "Raça C",
                            rgaPet = 123321123
                        });
                });

            modelBuilder.Entity("ApiTcc.Models.Plano", b =>
                {
                    b.Property<int>("planoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("dataFim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dataInicio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("percentual")
                        .HasColumnType("int");

                    b.Property<int>("valor")
                        .HasColumnType("int");

                    b.HasKey("planoId");

                    b.ToTable("Planos");

                    b.HasData(
                        new
                        {
                            planoId = 1,
                            dataFim = "31/10/2022",
                            dataInicio = "05/04/2022",
                            nome = "Premium Bronze",
                            percentual = 5,
                            valor = 100
                        },
                        new
                        {
                            planoId = 2,
                            dataFim = "31/11/2022",
                            dataInicio = "05/05/2022",
                            nome = "Premium Gold",
                            percentual = 5,
                            valor = 300
                        },
                        new
                        {
                            planoId = 3,
                            dataFim = "31/12/2022",
                            dataInicio = "05/06/2022",
                            nome = "Premium Black",
                            percentual = 10,
                            valor = 500
                        });
                });

            modelBuilder.Entity("ApiTcc.Models.Produto", b =>
                {
                    b.Property<int>("produtoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("associadoId")
                        .HasColumnType("int");

                    b.Property<string>("codigoProduto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descricaoProduto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fabricanteProduto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nomeProduto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("precoProduto")
                        .HasColumnType("int");

                    b.Property<byte[]>("produtoImagem")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("qtdProduto")
                        .HasColumnType("int");

                    b.HasKey("produtoId");

                    b.HasIndex("associadoId");

                    b.ToTable("Produtos");

                    b.HasData(
                        new
                        {
                            produtoId = 1,
                            associadoId = 1,
                            codigoProduto = "9191",
                            fabricanteProduto = "Fabricante A",
                            nomeProduto = "Produto A",
                            precoProduto = 20,
                            qtdProduto = 5
                        },
                        new
                        {
                            produtoId = 2,
                            associadoId = 2,
                            codigoProduto = "9192",
                            fabricanteProduto = "Fabricante B",
                            nomeProduto = "Produto B",
                            precoProduto = 15,
                            qtdProduto = 1
                        },
                        new
                        {
                            produtoId = 3,
                            associadoId = 3,
                            codigoProduto = "1010",
                            fabricanteProduto = "Fabricante C",
                            nomeProduto = "Produto C",
                            precoProduto = 350,
                            qtdProduto = 7
                        });
                });

            modelBuilder.Entity("ApiTcc.Models.Pedido", b =>
                {
                    b.HasOne("ApiTcc.Models.Cliente", "Cliente")
                        .WithMany("Pedidos")
                        .HasForeignKey("clienteId");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ApiTcc.Models.Pet", b =>
                {
                    b.HasOne("ApiTcc.Models.Cliente", "Cliente")
                        .WithMany("Pets")
                        .HasForeignKey("clienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ApiTcc.Models.Produto", b =>
                {
                    b.HasOne("ApiTcc.Models.Enuns.Associado", "Associado")
                        .WithMany("Produtos")
                        .HasForeignKey("associadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Associado");
                });

            modelBuilder.Entity("ApiTcc.Models.Cliente", b =>
                {
                    b.Navigation("Pedidos");

                    b.Navigation("Pets");
                });

            modelBuilder.Entity("ApiTcc.Models.Enuns.Associado", b =>
                {
                    b.Navigation("Produtos");
                });
#pragma warning restore 612, 618
        }
    }
}
